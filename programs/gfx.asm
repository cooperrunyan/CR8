#include "<std>/arch.asm"
#include "<std>/macros.asm"

mb 0x01
jmp [f1]

#mem 128 F1 [
    0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01100001100000000001101100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01100001100000000001101100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01111111100111111001101100111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01111111100111111001101100110011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01100001100110000001101100110011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b01100001100111111001101100111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
]

#mem 128 F2 [
    0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000001100000011000000000000000000110000011000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000001100000011000000000000000000110000011000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000001100000011001111111001111100110000011000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000001100110011001100011001100000110011111000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000001101110110001100011001000000110011001000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000000111001100001111111001000000110011111000000000000000000000000000000000000000000000000000000,
    0b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
]

#include "<std>/math.asm"

#macro
wait [a0]:
    mov %b, $a0h
    mov %a, $a0l
    call [_wait]

_wait:
    .loop:
        dec16 %a, %b
        jnza [.loop], %a
        jnza [.loop], %b
        ret

#macro
frame [a0]:
    mov %b, $a0h
    mov %a, $a0l
    call [_frame]

_frame:
    mov %c, 128

    push %b
    push %a
    push [BRAM >> 8]
    push [BRAM & 0x00FF]

    jnza [.loop], %c
    pop %a
    pop %a
    pop %a
    pop %a
    ret

    .loop:
        dec %c
        pop %a
        pop %b
        pop %l
        pop %h
        lw %d
        inc16 %l, %h
        push %h
        push %l
        mov %l, %a
        mov %h, %b
        sw %d
        inc16 %l, %h
        push %h
        push %l
        jnza [.loop], %c
        pop %a
        pop %a
        pop %a
        pop %a
        ret

f1:
    frame &F1
    wait [0x2000]
    jmp [f2]

f2:
    frame &F2
    wait [0x2000]
    jmp [f1]
