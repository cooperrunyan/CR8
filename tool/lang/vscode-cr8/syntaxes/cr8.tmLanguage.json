{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CR8 Assembly",
  "fileTypes": ["asm", "cr8"],
  "scopeName": "source.cr8",
  "repository": {
    "global": {
      "patterns": [
        { "include": "#num" },
        { "include": "#const" },
        { "include": "#punctuation" },
        { "include": "#operator" }
      ]
    },
    "num": {
      "match": "\\b(0x[0-9a-fA-F_]+)|(0b[01_]+)|([0-9_]+)\\b",
      "name": "constant.numeric"
    },
    "string": {
      "match": "\"[^\"]*\"",
      "name": "string"
    },
    "comment": {
      "match": ";.*$",
      "name": "comment.line"
    },
    "const": {
      "match": "\\b[A-Z_][A-Z_0-9]*\\b",
      "name": "constant.numeric"
    },
    "operator": {
      "match": "\\+|=|\\-|&|\\||\\/|\\*|\\>|\\<",
      "name": "keyword.operator"
    },
    "arrow": {
      "match": "\\=\\>",
      "name": "keyword.control"
    },
    "punctuation": {
      "match": "\\[|\\]|\\(|\\)|\\:|\\:\\:|\\,|\\{|\\}|#\\[|#!\\[",
      "name": "punctuation"
    },
    "label": {
      "match": "^\\s*([\\w_\\d]+)\\s*(?=\\:)",
      "captures": {
        "1": { "name": "entity.name.function" }
      }
    },
    "sub-label": {
      "match": "^\\s*(\\.[\\w_\\d]+)\\s*(?=\\:)",
      "captures": {
        "1": { "name": "entity.name.function" }
      }
    },
    "register": {
      "match": "\\%[a-z]+\\b",
      "name": "variable.other"
    },
    "macro-variable-define": {
      "match": "(\\$\\w[\\w\\d_]*)\\s*(:)\\s*([\\w_\\d]+)",
      "captures": {
        "1": { "name": "variable.parameter" },
        "2": { "name": "punctuation" },
        "3": { "patterns": [{ "include": "#macro-variable-type" }] }
      }
    },
    "macro-variable-usage": {
      "match": "(\\$\\w[\\w\\d_]*)((\\.)([hl]))?\\b",
      "captures": {
        "1": { "name": "variable.parameter" },
        "3": { "name": "punctuation" },
        "4": { "name": "variable.parameter" }
      }
    },
    "macro-variable-type": {
      "match": "\\b(lit|reg|expr|any)\\b",
      "name": "support.type"
    },
    "operation": {
      "match": "^\\s*([\\w_][\\w_\\d]*)\\s*(?=[^:])\\b",
      "name": "keyword.operator"
    },
    "label-reference": {
      "match": "(?<=[\\w,\\d_\\+\\/\\>\\<\\-\\(\\)\\*\\&\\$]\\s*)\\.?[\\w_\\d]+\\b",
      "name": "entity.name.function"
    },
    "instruction-scope": {
      "patterns": [
        { "include": "#global" },
        { "include": "#comment" },
        { "include": "#register" },
        { "include": "#operation" },
        { "include": "#label-reference" }
      ]
    },
    "module": {
      "match": "((?<=\\:\\:)[\\w_\\d]+)|([\\w_\\d]+(?=\\:\\:))|std|core|prelude",
      "name": "entity.name.namespace"
    },
    "meta-keyword": {
      "match": "\\b(use|main|macro|static|dyn|const)\\b",
      "name": "keyword"
    },
    "meta": {
      "begin": "#\\[",
      "beginCaptures": {
        "0": { "name": "punctuation" }
      },
      "end": "]",
      "endCaptures": {
        "0": { "name": "punctuation" }
      },
      "patterns": [
        { "include": "#meta-keyword" },
        { "include": "#string" },
        { "include": "#module" },
        { "include": "#global" }
      ]
    },
    "macro": {
      "begin": "(?m)(#\\[\\s*macro\\s*\\])[\\s\\n]*(\\w[\\w_\\d]*)\\s*(:)[\\s\\n]*({)",
      "end": "}",
      "beginCaptures": {
        "1": { "patterns": [{ "include": "#meta" }] },
        "2": { "name": "entity.name.function" },
        "3": { "name": "punctuation" },
        "4": { "name": "punctuation" }
      },
      "endCaptures": {
        "0": { "name": "punctuation" }
      },
      "patterns": [
        { "include": "#comment" },
        {
          "begin": "\\(",
          "end": "\\)",
          "beginCaptures": {
            "0": { "name": "punctuation" }
          },
          "endCaptures": {
            "0": { "name": "punctuation" }
          },
          "patterns": [
            { "include": "#macro-variable-define" },
            { "include": "#punctuation" }
          ]
        },
        {
          "begin": "(\\=\\>)[\\s\\n]*({)",
          "end": "}",
          "beginCaptures": {
            "1": { "patterns": [{ "include": "#arrow" }] },
            "2": { "name": "punctuation" }
          },
          "endCaptures": {
            "0": { "name": "punctuation" }
          },
          "patterns": [
            { "include": "#macro-variable-usage" },
            { "include": "#instruction-scope" }
          ]
        }
      ]
    },
    "micro-variant-type": {
      "match": "\\b(reg|imm)\\b",
      "name": "support.type"
    },
    "microcode": {
      "patterns": [
        { "include": "#punctuation" },
        { "include": "#comment" },
        {
          "match": "\\b(pc)\\s+(jmp|jnz|inc)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        },
        {
          "match": "\\b(sp)\\s+(dec|inc)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        },
        {
          "match": "\\b(alu)\\s+(adc|sbb|nand|and|or|nor|cmp)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        },
        {
          "match": "\\b(aw)\\s+(pc|xy|sp|lr)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        },
        {
          "match": "\\b(dr)\\s+(f|k|lhs|rhs|io|sel|mem|dev)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        },
        {
          "match": "\\b(dw)\\s+(op|mem|io|sel|alflg|alu|dev|k|rhs)\\b",
          "captures": {
            "1": { "name": "keyword.control" },
            "2": { "name": "keyword.operator" }
          }
        }
      ]
    },
    "microcode-variant": {
      "patterns": [
        {
          "begin": "(\\()\\s*(\\w[\\w_\\d]*)\\s*(\\))\\s*(\\=\\>)\\s*({)",
          "end": "}",
          "beginCaptures": {
            "1": { "name": "punctuation" },
            "2": { "patterns": [{ "include": "#micro-variant-type" }] },
            "3": { "name": "punctuation" },
            "4": { "patterns": [{ "include": "#arrow" }] },
            "5": { "name": "punctuation" }
          },
          "endCaptures": {
            "0": { "name": "punctuation" }
          },
          "patterns": [{ "include": "#microcode" }, { "include": "#comment" }]
        }
      ]
    },
    "micro": {
      "begin": "(#!\\[)\\s*(micro)\\s*(\\])",
      "beginCaptures": {
        "1": { "name": "punctuation" },
        "2": { "name": "keyword.control" },
        "3": { "name": "punctuation" }
      },
      "end": "",
      "patterns": [
        {
          "begin": "\\b(\\w[\\w_\\d]*)\\s*(:)\\s*({)",
          "end": "}",
          "beginCaptures": {
            "1": { "name": "entity.name.function" },
            "2": { "name": "punctuation" },
            "3": { "name": "punctuation" }
          },
          "endCaptures": {
            "0": { "name": "punctuation" }
          },
          "patterns": [{ "include": "#microcode-variant" }]
        }
      ]
    }
  },
  "patterns": [
    { "include": "#num" },
    { "include": "#micro" },
    {
      "match": "(?<!\\w|\\d)\\$(?!\\w|\\d)",
      "name": "support.constant"
    },
    { "include": "#macro" },
    { "include": "#meta" },

    {
      "begin": "{",
      "end": "}",
      "captures": {
        "0": { "name": "punctuation" }
      },
      "patterns": [
        { "include": "#num" },
        { "include": "#punctuation" },
        { "include": "#comment" }
      ]
    },

    { "include": "#sub-label" },
    { "include": "#label" },
    { "include": "#instruction-scope" }
  ]
}
