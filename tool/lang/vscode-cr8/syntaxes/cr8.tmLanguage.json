{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "CR8 Assembly",
  "fileTypes": ["asm", "cr8"],
  "scopeName": "source.cr8",
  "repository": {
    "num": {
      "patterns": [
        {
          "match": "\\b0b[01]+\\b",
          "name": "constant.numeric"
        },
        {
          "match": "(i?)\\b0x[0-9a-fA-F]+\\b",
          "name": "constant.numeric"
        },
        {
          "match": "\\b[0-9]+\\b",
          "name": "constant.numeric"
        }
      ]
    },
    "base": {
      "patterns": [
        {
          "match": ";.*$",
          "name": "comment.line"
        },
        {
          "match": "[A-Z_][A-Z_0-9]+",
          "name": "constant.numeric"
        },
        {
          "match": "\\+|=|\\-|&|\\|\\/|\\*|\\>|\\<",
          "name": "keyword.operator"
        },
        {
          "match": "\"[^\"]*\"",
          "name": "string"
        },
        {
          "match": "\\[|\\]|\\(|\\)|\\:|\\,|\\{|\\}",
          "name": "punctuation"
        },
        {
          "include": "#num"
        },
        {
          "match": "(\\.?[a-z_0-9]+)\\s*(?=\\:)",
          "name": "entity.name.function"
        }
      ]
    }
  },
  "patterns": [
    {
      "include": "#base"
    },
    {
      "match": "\\=\\>",
      "name": "keyword.control"
    },

    {
      "match": "(#\\[)\\s*(.*)\\s*(\\])",
      "captures": {
        "1": {
          "name": "punctuation"
        },
        "3": {
          "name": "punctuation"
        },
        "2": {
          "patterns": [
            {
              "match": "\\b(use|main|macro|static|dyn|const)\\b",
              "name": "keyword.control"
            },
            {
              "match": "(\\()\\s*(.*)\\s*(\\))",
              "captures": {
                "1": {
                  "name": "punctuation"
                },
                "3": {
                  "name": "punctuation"
                },
                "2": {
                  "patterns": [
                    {
                      "include": "#num"
                    },
                    {
                      "match": "std|core|prelude",
                      "name": "entity.name.namespace"
                    },
                    {
                      "match": "(?:\\:\\:)(\\w+)",
                      "captures": {
                        "1": {
                          "name": "entity.name.namespace"
                        }
                      }
                    },
                    {
                      "match": "(\\w+)\\s*(?=\\:)",
                      "captures": {
                        "1": {
                          "name": "constant.numeric"
                        }
                      }
                    },
                    {
                      "match": "\"[^\"]*\"",
                      "name": "string"
                    },
                    {
                      "match": "(?<=\\s*)(\\w+)(?=\\s*)",
                      "captures": {
                        "1": {
                          "name": "constant.numeric"
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    },
    {
      "match": "(\\.?[a-z0-9_]+)",
      "name": "entity.name.function"
    },
    {
      "match": "\\%[a-z]+\\b",
      "name": "variable.name"
    },
    {
      "match": "(?<=\\()(.*?)(?=\\)\\s*?\\=\\>)",
      "captures": {
        "1": {
          "patterns": [
            {
              "match": "\\b(lit|reg|expr)\\b",
              "name": "support.type"
            },
            {
              "match": "\\$\\w(\\w|\\d|_)*",
              "name": "variable.parameter"
            },
            {
              "match": "\\|",
              "name": "keyword.control"
            }
          ]
        }
      }
    },
    {
      "match": "\\$\\w(\\w|\\d|_)*",
      "name": "variable.parameter"
    },
    {
      "begin": "^\\s*(#!\\[)\\s*(micro)\\s*(\\])",
      "beginCaptures": {
        "1": {
          "name": "punctuation"
        },
        "2": {
          "name": "keyword.control"
        },
        "3": {
          "name": "punctuation"
        }
      },
      "end": "",
      "patterns": [
        {
          "match": "\\=\\>",
          "name": "keyword.control"
        },
        {
          "include": "#base"
        },
        {
          "match": "\\b(pc)\\s*(\\+\\+)",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "keyword.operator"
            }
          }
        },
        {
          "match": "\\b(pc)\\s+\\b(j|jnz)\\b",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "match": "\\b(sp)\\s*(\\+\\+|--)",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "keyword.operator"
            }
          }
        },
        {
          "match": "\\b(alu)\\s*\\b(add|sub|and|or|nor|cmp)\\b",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name.function"
            }
          }
        },
        {
          "match": "\\b(aw|ar|dw|dr|rst)\\s+\\b(sp|pc|xy|lr|a|b|c|d|x|y|z|f|k|alu|mem|io|rhs|lhs|sel|alflg)?",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "entity.name"
            }
          }
        }
      ]
    }
  ]
}
