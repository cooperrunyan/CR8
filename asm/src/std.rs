use phf::phf_map;

pub static STD: phf::Map<&'static str, &'static str> = phf_map! {
    "std" => include_str!("std/mod.asm"),
    "core" => include_str!("std/core/mod.asm"),
    "core::sys" => include_str!("std/core/sys.asm"),
    "core::macro" => include_str!("std/core/macro/mod.asm"),
    "core::macro::util" => include_str!("std/core/macro/util.asm"),
    "core::macro::math" => include_str!("std/core/macro/math/mod.asm"),
    "core::macro::math::add" => include_str!("std/core/macro/math/add.asm"),
    "core::macro::math::sub" => include_str!("std/core/macro/math/sub.asm"),
    "core::macro::call" => include_str!("std/core/macro/call.asm"),
    "core::macro::clear" => include_str!("std/core/macro/clear.asm"),
    "core::macro::jmp" => include_str!("std/core/macro/jmp.asm"),
    "core::macro::logic" => include_str!("std/core/macro/logic.asm"),
    "core::macro::send" => include_str!("std/core/macro/send.asm"),
    "std::math" => include_str!("std/math/mod.asm"),
    "std::math::mul" => include_str!("std/math/mul/mod.asm"),
    "std::math::mul::mul" => include_str!("std/math/mul/mul.asm"),
    "std::math::mul::mul16" => include_str!("std/math/mul/mul16.asm"),
    "std::math::shift" => include_str!("std/math/shift/mod.asm"),
    "std::math::shift::lsh" => include_str!("std/math/shift/lsh.asm"),
    "std::math::shift::lsh16" => include_str!("std/math/shift/lsh16.asm"),
    "std::math::shift::rsh" => include_str!("std/math/shift/rsh.asm"),
    "std::gfx" => include_str!("std/gfx/mod.asm"),
    "std::gfx::frame" => include_str!("std/gfx/frame.asm"),
    "std::wait" => include_str!("std/wait/mod.asm"),
};
